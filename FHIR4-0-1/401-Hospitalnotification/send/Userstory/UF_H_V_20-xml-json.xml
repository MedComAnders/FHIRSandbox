<?xml version="1.0" encoding="UTF-8"?>
<TestScript xmlns="http://hl7.org/fhir">
	<id value="hospitalNotification-message-transfere-internal-impatinet"/>
	<meta>
		<profile value="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript"/>
	</meta>
	<text>
		<status value="generated"/>
		<div xmlns="http://www.w3.org/1999/xhtml"><p>medcom-hospitalNotification-message Patient is admitted, goes on leave from the hospital and dies during leave- XML and JSON</p></div>
	</text>

	<url value="http://medcom.dk"/>
	<name value="hospitalNotification-message-admit-transferred-internal-xml-json"/>
	<title value="hospitalNotification-message admit-emergency create XML and JSON"/>
	<status value="active"/>
	<date value="2021-03-22"/>
	<publisher value="MedCom"/>
	<contact>
		<name value="MedCom"/>
		<telecom>
			<system value="email"/>
			<value value="medcom@medcom.dk"/>
			<use value="work"/>
		</telecom>
	</contact>
	<description value="Patient is admitted, goes on leave from the hospital and dies during leave"/>
	<copyright value="MedCom 2021"/>

	<origin>
		<index value="1"/>
		<profile>
			<system value="http://terminology.hl7.org/CodeSystem/testscript-profile-origin-types"/>
			<code value="FHIR-Client"/>
		</profile>
	</origin>
	<destination>
		<index value="1"/>
		<profile>
			<system value="http://terminology.hl7.org/CodeSystem/testscript-profile-destination-types"/>
			<code value="FHIR-Server"/>
		</profile>
	</destination>
<fixture id="bundle-createSTIN"> 
        <autocreate value="false"/>  
        <autodelete value="false"/>  
        <resource> 
           <reference value="/FHIRSandbox/MedCom/401-Hospitalnotification/send/Userstory/_reference/resources/HospitalNotificationMessage-STIN-UF_H_V_20.xml"/>  
        </resource> 
    </fixture> 
    <fixture id="bundle-createSTOR"> 
        <autocreate value="false"/>  
        <autodelete value="false"/>  
        <resource> 
           <reference value="/FHIRSandbox/MedCom/401-Hospitalnotification/send/Userstory/_reference/resources/HospitalNotificationMessage-STOR-UF_H_V_20.xml"/>  
        </resource> 
    </fixture> 
     <fixture id="bundle-createSLOR"> 
        <autocreate value="false"/>  
        <autodelete value="false"/>  
        <resource> 
           <reference value="/FHIRSandbox/MedCom/401-Hospitalnotification/send/Userstory/_reference/resources/HospitalNotificationMessage-SLOR-UF_H_V_20.xml"/>  
        </resource> 
    </fixture>
    <fixture id="bundle-createMORS"> 
        <autocreate value="false"/>  
        <autodelete value="false"/>  
        <resource> 
           <reference value="/FHIRSandbox/MedCom/401-Hospitalnotification/send/Userstory/_reference/resources/HospitalNotificationMessage-MORS-UF_H_V_20.xml"/>  
        </resource> 
    </fixture> 
	<profile id="hospitalnotification-profile">
		<reference value="http://medcomfhir.dk/fhir/core/1.0/StructureDefinition/medcom-hospitalNotification-message"/>
	</profile>

<!-- TEST 1 -->
	<variable> 
        <name value="encounterResourceIdentifier"/>  
        <expression value="Bundle.entry.resource.ofType(Encounter).identifier.value"/>
        <sourceId value="01-S1admitPatinent"/> 
    </variable> 
    <variable> 
        <name value="headerResourceRefference"/>  
        <expression value="Bundle.entry[0].fullUrl"/>
        <sourceId value="01-S1admitPatinent"/> 
    </variable> 
    <variable> 
        <name value="firstEpisodeOfCareIdentifier"/>  
        <expression value="Bundle.entry.resource.ofType(Encounter).episodeOfCare.identifier.value"/>
        <sourceId value="01-S1admitPatinent"/> 
    </variable>
 <!-- TEST 2 --> 
 <variable> 
        <name value="headerResourceRefferenceS71b"/>  
        <expression value="Bundle.entry[0].fullUrl"/>
        <sourceId value="02-S4-leave"/> 
    </variable>
 <!-- TEST 3 -->  
 <variable> 
        <name value="headerResourceRefferenceS72"/>  
        <expression value="Bundle.entry[0].fullUrl"/>
        <sourceId value="03-S5Leave"/> 
    </variable>
     
	<test id="01-Use case S1 Admit patient">
		<name value="HospitalNotification-S1"/>
		<description value="Post a Hospital notification. The expected response is a 200(OK) with a payload of the Hospital notification resource in XML an JSON format."/>
  
		 <action>
			<operation>
				<type>
					<system value="http://terminology.hl7.org/CodeSystem/testscript-operation-codes"/>
					<code value="create"/>
				</type>
				<resource value="Bundle"/>
				<description value="post the hospitalNotification and verify the contents."/>
				<destination value="1"/>
				<encodeRequestUrl value="true"/>
				<origin value="1"/> 
			  <responseId value="01-S1admitPatinent"/> 
			 <sourceId value="bundle-createSTIN"/>
			</operation>
		</action> 
		
		<action>
			<assert>
				<description value="Confirm that the client request payload contains a Bundle resource type."/>
				<direction value="request"/>
				<resource value="Bundle"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the request resource contains the expected evetCoding code."/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(MessageHeader).event.as(Coding).select(code = 'hospital-notification-message').allTrue()"/>
				<operator value="equals"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the request resource contains the expected activity code."/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Provenance).activity.coding.code"/>
				<operator value="equals"/>
				<value value="admit-inpatient"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the request resource contains the expected Encounter class code."/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Encounter).class.code"/>
				<operator value="equals"/>
				<value value="IMP"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the request resource contains the expected status"/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Encounter).status"/>
				<operator value="equals"/>
				<value value="in-progress"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the reportOfAdmissionRecipientExtension is set to true"/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(MessageHeader).extension.where(url='http://medcomfhir.dk/fhir/core/1.0/StructureDefinition/medcom-messaging-reportOfAdmissionExtension').value"/>
				<operator value="equals"/>
				<value value="true"/>
				<warningOnly value="false"/>
			</assert>
		</action>
	</test>
	<test id="02-Use case S4-The patient goes on leave from hospital stay">
		<name value="HospitalNotification-S4"/>
		<description value="Post a Hospital notification. The expected response is a 200(OK) with a payload of the Hospital notification resource in XML or json format."/>
  
		 <action>
			<operation>
				<type>
					<system value="http://terminology.hl7.org/CodeSystem/testscript-operation-codes"/>
					<code value="create"/>
				</type>
				<resource value="Bundle"/>
				<description value="post the hospitalNotification and verify the contents."/>
				<destination value="1"/>
				<encodeRequestUrl value="true"/>
				<origin value="1"/>
				<responseId value="02-S4-leave"/>
				<sourceId value="bundle-createSTOR"/>
			</operation>
		</action> 
	 <!-- 	<action>
 <assert>
 <description value="Validate of hospital notification."/>
  <direction value="request"/>
    <validateProfileId value="hospitalnotification-profile"></validateProfileId>
    <warningOnly value="false"/>
  </assert>
</action>
 -->
		
		
		<action>
			<assert>
				<description value="Confirm that the client request payload contains a Bundle resource type."/>
				<direction value="request"/>
				<resource value="Bundle"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the request resource contains the expected evetCoding code."/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(MessageHeader).event.as(Coding).select(code = 'hospital-notification-message').allTrue()"/>
				<operator value="equals"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the request resource contains the expected activity code."/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Provenance).activity.where(coding.code ='start-leave-inpatient').exists()"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the request resource contains activity code in both Provenance."/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Provenance).activity.where(coding.code = 'admit-inpatient').count()"/>
				<operator value="equals"/>
				<value value="1"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the what refferece S1 MessageHeader"/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Provenance).where(entity.what.reference ='${headerResourceRefference}')"/>
				<warningOnly value="true"/>
			</assert>
		</action>
		<action> 
            <assert> 
                <description value="Confirm that the taget refferece S1 MessageHeader"/>  
                <direction value="request"/>  
                <expression value="Bundle.entry.resource.ofType(Provenance).where(target.reference = '${headerResourceRefference}')"/>  
                <warningOnly value="false"/> 
            </assert> 
        </action> 
		<action>
			<assert>
				<description value="Confirm that the request resource contains the expected Encounter class code."/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Encounter).class.code"/>
				<operator value="equals"/>
				<value value="IMP"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the request resource contains the expected status"/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Encounter).status"/>
				<operator value="equals"/>
				<value value="onleave"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the Encounter.identifier is equal to S1 test"/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Encounter).identifier.value"/>
				<operator value="equals"/>
				<value value="${encounterResourceIdentifier}"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the EpisodeOfCareIdentifier is equal to S1"/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Encounter).episodeOfCare.identifier.value"/>
				<operator value="equals"/>
				<value value="${firstEpisodeOfCareIdentifier}"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the reportOfAdmissionRecipientExtension is set to true"/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(MessageHeader).extension.where(url='http://medcomfhir.dk/fhir/core/1.0/StructureDefinition/medcom-messaging-reportOfAdmissionExtension').value"/>
				<operator value="equals"/>
				<value value="false"/>
				<warningOnly value="false"/>
			</assert>
		</action>
	</test>

	<test id="03-Use case S5 -end leave">
		<name value="HospitalNotification-S5"/>
		<description value="Post a Hospital notification. The expected response is a 200(OK) with a payload of the Hospital notification resource in XML or JSON format."/>
  
		 <action>
			<operation>
				<type>
					<system value="http://terminology.hl7.org/CodeSystem/testscript-operation-codes"/>
					<code value="create"/>
				</type>
				<resource value="Bundle"/>
				<description value="post the hospitalNotification -STIN -Receive patient from another hospital in the same region and send notification"/>
				<destination value="1"/>
				<encodeRequestUrl value="true"/>
				<origin value="1"/>
				<responseId value="03-S5Leave"/>
				<sourceId value="bundle-createSLOR"/>
			</operation>
		</action> 
	 <!-- 	<action>
 <assert>
 <description value="Validate of hospital notification."/>
  <direction value="request"/>
    <validateProfileId value="hospitalnotification-profile"></validateProfileId>
    <warningOnly value="false"/>
  </assert>
</action>
 -->
		
		
		<action>
			<assert>
				<description value="Confirm that the client request payload contains a Bundle resource type."/>
				<direction value="request"/>
				<resource value="Bundle"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the request resource contains the expected evetCoding code."/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(MessageHeader).event.as(Coding).select(code = 'hospital-notification-message').allTrue()"/>
				<operator value="equals"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the request resource contains the expected activity code."/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Provenance).activity.where(coding.code ='end-leave-inpatient').exists()"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the request resource contains the expected activity code."/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Provenance).activity.where(coding.code ='start-leave-inpatient').exists()"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the request resource contains activity code in both Provenance."/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Provenance).activity.where(coding.code = 'admit-inpatient').count()"/>
				<operator value="equals"/>
				<value value="1"/>
				<warningOnly value="false"/>
			</assert>
		</action>	
		<action> 
            <assert> 
                <description value="Confirm that the taget refferece S1 MessageHeader"/>  
                <direction value="request"/>  
                <expression value="Bundle.entry.resource.ofType(Provenance).where(target.reference = '${headerResourceRefference}')"/>  
                <warningOnly value="false"/> 
            </assert> 
        </action> 
        <action> 
            <assert> 
                <description value="Confirm that the taget refferece S4 MessageHeader"/>  
                <direction value="request"/>  
                <expression value="Bundle.entry.resource.ofType(Provenance).where(target.reference = '${headerResourceRefferenceS71b}')"/>  
                <warningOnly value="false"/> 
            </assert> 
        </action>
       	<action>
			<assert>
				<description value="Confirm that the what refferece S7.1b MessageHeader"/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Provenance).where(entity.what.reference ='${headerResourceRefferenceS71b}')"/>
				<warningOnly value="true"/>
			</assert>
		</action>
		
		<action>
			<assert>
				<description value="Confirm that the request resource contains the expected Encounter class code."/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Encounter).class.code"/>
				<operator value="equals"/>
				<value value="IMP"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the request resource contains the expected status"/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Encounter).status"/>
				<operator value="equals"/>
				<value value="in-progress"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the Encounter.identifier is equal to S1 test"/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Encounter).identifier.value"/>
				<operator value="equals"/>
				<value value="${encounterResourceIdentifier}"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the EpisodeOfCareIdentifier is equal to S1"/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Encounter).episodeOfCare.identifier.value"/>
				<operator value="equals"/>
				<value value="${firstEpisodeOfCareIdentifier}"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the reportOfAdmissionRecipientExtension is set to true"/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(MessageHeader).extension.where(url='http://medcomfhir.dk/fhir/core/1.0/StructureDefinition/medcom-messaging-reportOfAdmissionExtension').value"/>
				<operator value="equals"/>
				<value value="false"/>
				<warningOnly value="false"/>
			</assert>
		</action>
	</test>
	<test id="04-Use case S9.3-end hospitalstay Deseased">
		<name value="HospitalNotification-S93"/>
		<description value="Post a Hospital notification. The expected response is a 200(OK) with a payload of the Hospital notification resource in XML or JSON format."/>
  
		 <action>
			<operation>
				<type>
					<system value="http://terminology.hl7.org/CodeSystem/testscript-operation-codes"/>
					<code value="create"/>
				</type>
				<resource value="Bundle"/>
				<description value="post the hospitalNotification and verify the contents."/>
				<destination value="1"/>
				<encodeRequestUrl value="true"/>
				<origin value="1"/>
				<sourceId value="bundle-createMORS"/>
			</operation>
		</action> 
	 <!-- 	<action>
 <assert>
 <description value="Validate of hospital notification."/>
  <direction value="request"/>
    <validateProfileId value="hospitalnotification-profile"></validateProfileId>
    <warningOnly value="false"/>
  </assert>
</action>
 -->
		
		
		<action>
			<assert>
				<description value="Confirm that the client request payload contains a Bundle resource type."/>
				<direction value="request"/>
				<resource value="Bundle"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the request resource contains the expected evetCoding code."/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(MessageHeader).event.as(Coding).select(code = 'hospital-notification-message').allTrue()"/>
				<operator value="equals"/>
				<warningOnly value="false"/>
			</assert>
		</action>
	<action>
			<assert>
				<description value="Confirm that the request resource contains the expected activity code."/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Provenance).activity.where(coding.code ='end-leave-inpatient').exists()"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the request resource contains the expected activity code."/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Provenance).activity.where(coding.code ='start-leave-inpatient').exists()"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the request resource contains activity code in both Provenance."/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Provenance).activity.where(coding.code = 'admit-inpatient').count()"/>
				<operator value="equals"/>
				<value value="1"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the what refferece S1 MessageHeader"/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Provenance).where(entity.what.reference ='${headerResourceRefference}')"/>
				<warningOnly value="true"/>
			</assert>
		</action>
		<action> 
            <assert> 
                <description value="Confirm that the taget refferece S1 MessageHeader"/>  
                <direction value="request"/>  
                <expression value="Bundle.entry.resource.ofType(Provenance).where(target.reference = '${headerResourceRefference}')"/>  
                <warningOnly value="false"/> 
            </assert> 
        </action> 
		<action>
			<assert>
				<description value="Confirm that the request resource contains the expected Encounter class code."/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Encounter).class.code"/>
				<operator value="equals"/>
				<value value="IMP"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the request resource contains the expected status"/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Encounter).status"/>
				<operator value="equals"/>
				<value value="finished"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the Encounter.identifier is equal to S1 test"/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Encounter).identifier.value"/>
				<operator value="equals"/>
				<value value="${encounterResourceIdentifier}"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the EpisodeOfCareIdentifier is equal to S1"/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Encounter).episodeOfCare.identifier.value"/>
				<operator value="equals"/>
				<value value="${firstEpisodeOfCareIdentifier}"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the decease is true."/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(Patient).deceased"/>
				<operator value="equals"/>
				<value value="true"/>
				<warningOnly value="false"/>
			</assert>
		</action>
		<action>
			<assert>
				<description value="Confirm that the reportOfAdmissionRecipientExtension is set to true"/>
				<direction value="request"/>
				<expression value="Bundle.entry.resource.ofType(MessageHeader).extension.where(url='http://medcomfhir.dk/fhir/core/1.0/StructureDefinition/medcom-messaging-reportOfAdmissionExtension').value"/>
				<operator value="equals"/>
				<value value="false"/>
				<warningOnly value="false"/>
			</assert>
		</action>
	</test>
</TestScript>
